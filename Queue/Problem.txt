1)Implement Stack using 2 Queues Q1 & Q2-
 Solution - 
 Push operation -
 If Q1 is empty then add the number in last of Q2.Otherwise vice versa.
 Time complexity - O(1)
 
 Pop operation --
 If Q1 is NOT empty then transfer (n-1) elements to Q2 and return last element.
 Otherwise Vice versa.
 Time Complexity - O(n)
 
 
 2)Alternate values in Queue Pair 
 Solution -  Check the class - RearrangeQueue 
 
 3)Reverse the First K elements in Queue -
 e.g input = 1,2,3,4,5,6,7,8,9  - K=5 first 5 no.
 output =. 5,4,3,2,1,6,7,8,9
 Solution -
 1)Put first 5 elements in Stack.
 2)Then put same 5 elements from stack to Queue again(back of the Queue).
 3)Then remove First (n-k) elements from start to Queue and add it the back of the Queue(i.e 6,7,8,9)
 
 
 
4)Reverse Stack using Recursion --

           public static void reverseQ(Queue q1) {
             if (q1.isEmpty())
              return;
             else {
              int temp = q1.deleteFirst();
              reverseQ(q1);
              q1.addLast(temp);
             }
            }
